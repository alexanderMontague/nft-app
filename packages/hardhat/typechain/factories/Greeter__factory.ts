/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000bd738038062000bd7833981810160405281019062000037919062000290565b620000826040518060400160405280601a81526020017f4465706c6f79696e67204772656574657220436f6e7472616374000000000000815250620000a260201b620001ce1760201c565b80600090805190602001906200009a9291906200016e565b5050620004c6565b6200014281604051602401620000b9919062000316565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200014560201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200017c90620003eb565b90600052602060002090601f016020900481019282620001a05760008555620001ec565b82601f10620001bb57805160ff1916838001178555620001ec565b82800160010185558215620001ec579182015b82811115620001eb578251825591602001919060010190620001ce565b5b509050620001fb9190620001ff565b5090565b5b808211156200021a57600081600090555060010162000200565b5090565b6000620002356200022f8462000363565b6200033a565b9050828152602081018484840111156200024e57600080fd5b6200025b848285620003b5565b509392505050565b600082601f8301126200027557600080fd5b8151620002878482602086016200021e565b91505092915050565b600060208284031215620002a357600080fd5b600082015167ffffffffffffffff811115620002be57600080fd5b620002cc8482850162000263565b91505092915050565b6000620002e28262000399565b620002ee8185620003a4565b935062000300818560208601620003b5565b6200030b81620004b5565b840191505092915050565b60006020820190508181036000830152620003328184620002d5565b905092915050565b60006200034662000359565b905062000354828262000421565b919050565b6000604051905090565b600067ffffffffffffffff82111562000381576200038062000486565b5b6200038c82620004b5565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003d5578082015181840152602081019050620003b8565b83811115620003e5576000848401525b50505050565b600060028204905060018216806200040457607f821691505b602082108114156200041b576200041a62000457565b5b50919050565b6200042c82620004b5565b810181811067ffffffffffffffff821117156200044e576200044d62000486565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61070180620004d66000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a41368621461003b578063cfae321714610057575b600080fd5b6100556004803603810190610050919061043a565b610075565b005b61005f61013c565b60405161006c91906104b4565b60405180910390f35b6101226040518060600160405280602381526020016106a9602391396000805461009e906105d6565b80601f01602080910402602001604051908101604052809291908181526020018280546100ca906105d6565b80156101175780601f106100ec57610100808354040283529160200191610117565b820191906000526020600020905b8154815290600101906020018083116100fa57829003601f168201915b505050505083610267565b806000908051906020019061013892919061032f565b5050565b60606000805461014b906105d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610177906105d6565b80156101c45780601f10610199576101008083540402835291602001916101c4565b820191906000526020600020905b8154815290600101906020018083116101a757829003601f168201915b5050505050905090565b610264816040516024016101e291906104b4565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610306565b50565b61030183838360405160240161027f939291906104d6565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610306565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461033b906105d6565b90600052602060002090601f01602090048101928261035d57600085556103a4565b82601f1061037657805160ff19168380011785556103a4565b828001600101855582156103a4579182015b828111156103a3578251825591602001919060010190610388565b5b5090506103b191906103b5565b5090565b5b808211156103ce5760008160009055506001016103b6565b5090565b60006103e56103e084610547565b610522565b9050828152602081018484840111156103fd57600080fd5b610408848285610594565b509392505050565b600082601f83011261042157600080fd5b81356104318482602086016103d2565b91505092915050565b60006020828403121561044c57600080fd5b600082013567ffffffffffffffff81111561046657600080fd5b61047284828501610410565b91505092915050565b600061048682610578565b6104908185610583565b93506104a08185602086016105a3565b6104a981610697565b840191505092915050565b600060208201905081810360008301526104ce818461047b565b905092915050565b600060608201905081810360008301526104f0818661047b565b90508181036020830152610504818561047b565b90508181036040830152610518818461047b565b9050949350505050565b600061052c61053d565b90506105388282610608565b919050565b6000604051905090565b600067ffffffffffffffff82111561056257610561610668565b5b61056b82610697565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b838110156105c15780820151818401526020810190506105a6565b838111156105d0576000848401525b50505050565b600060028204905060018216806105ee57607f821691505b6020821081141561060257610601610639565b5b50919050565b61061182610697565b810181811067ffffffffffffffff821117156106305761062f610668565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a2646970667358221220a8cef0ebb1749f3c420e22de1ce47034843bc75b469f428768a2a298a283a31364736f6c63430008040033";

export class Greeter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
